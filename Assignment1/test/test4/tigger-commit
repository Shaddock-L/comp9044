#!/bin/dash

if test ! -d ".tigger"
then
	echo "tigger-commit: error: no .tigger directory containing tigger repository exists"
	exit 1
fi
if test ! -d ".tigger/index" 
then
	echo "nothing to commit"
	exit
fi

modified=0
repo=".tigger"
if test "$#" = 2 
then
	if test "$1" != "-m"
	then
		echo "usage: xxxxx"
		exit 1
	elif test "$2" = ""
	then 
		echo "usage: xxxxx"
		exit 1
	fi
	msg="$2"
fi

# need add 
if test "$#" = 3
then
	if test "$1" != "-a"
	then 
		echo "usage: xxxxx"
		exit 1
	elif test "$2" != "-m"
	then 
		echo "usage: xxxxx"
		exit 1
	elif test "$3" = ""
	then 
		echo "usage: xxxxx"
		exit 1
	fi
	msg="$3"
	# renew the file in index with the file with same name in pwd
	for file in ".tigger"/"index"/*
	do
		fname=$(echo "$file" | cut -d'/' -f3)
		#echo "$fname"
		if test -e "$fname"
		then
			cp "$fname" ".tigger"/"index"/"$fname"

		else
		# if we use '-a' command, tigger-commit should work if some files in index are removed in repo
				modified=1
				rm ".tigger"/"index"/"$fname"
		fi
	done
fi


# start to commit
# if index is empty, nothing is to be committed
if test $(ls ".tigger"/"index" | wc -l) -eq 0
then
	echo "nothing to commit"
	exit 1
fi

# We need to commit if
# 1. never commited before
# 2.1 there are some files updated in pwd
# Since the 'if' loop above, we must have some new files in index till this step.
# So, if the .log file does not exist, create .log first
if test ! -e ".tigger"/".log"
then
	echo "0 "$msg"" > ".tigger"/".log"
	cmt_count=0
	modified=1
else
	cmt_count=$(wc -l ".tigger"/".log" | cut -d' ' -f1)
fi

# check whether the files in index are updated
if test "$cmt_count" -gt 0
then
	his_path=".tigger"/"cache"/"history_""$((cmt_count-1))"
	for file in ".tigger"/"index"/*
	do
		fname=$(echo "$file" | cut -d'/' -f3)
		if ! test -e "$his_path"/"$fname"
		then
			modified=1
		else
			if ! diff "$his_path"/"$fname" ".tigger/index/"$fname"" >/dev/null
			then
			# file is updated, need commit
				modified=1
			fi
		fi
	done
fi

# copy the files in the index to cache
if test "$modified" -eq 1
then
	# write the msg into .log if it is not the first msg
	if test "$cmt_count" -gt 0
	then
		echo ""$cmt_count" $msg" >> ".tigger"/".log"
	fi

	# create a new directory to store the files
	dir_path=".tigger"/"cache"/"history_""$cmt_count"
	mkdir "$dir_path"
	for file in ".tigger"/"index"/*
	do
	
		fname=$(echo "$file" | cut -d'/' -f3)
		#copy the files in index into cache
		cp ".tigger"/"index"/"$fname" "$dir_path"/"$fname"
		#copy the files in index into repo
		cp ".tigger"/"index"/"$fname" "$repo"/"$fname"
	done

	# print the idx 
	echo "Committed as commit "$cmt_count""
else
	echo "nothing to commit"

fi